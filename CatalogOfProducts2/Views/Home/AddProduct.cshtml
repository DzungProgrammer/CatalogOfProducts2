@model CatalogOfProducts2.Models.ProductModel

 <h2>New Product</h2>

@using (Html.BeginForm("AddProduct", "Home", FormMethod.Post, 
                            new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="control-label col-md-2">
            @Html.LabelFor(model => model.ProductName)
            <span class="glyphicon glyphicon-asterisk star" aria-hidden="true"
                  style="position: sticky;
                  color: #da1313;
                  font-size: 10px;"></span>
        </div>
        
        <div class="col-md-5">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control",@rows="10", @cols="50", @style="height:100%"  })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 category">
            @Html.DropDownListFor(model => model.Category,new SelectList(ViewBag.list,"CategoryId", "Category"),"", htmlAttributes : new { @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2 price">
            @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })        
        <div class="col-md-10">
            <label for="file" class="custom-file-upload">
                <span class="glyphicon glyphicon-file" aria-hidden="true"></span>
                Upload
            </label>
            
            <input type="file" class="custom-file-input" name="file" id="file" onchange="loadFile(event)" />
            
            <script>
                var loadFile = function (event) {
                    var output = document.getElementById('output');
                    output.src = URL.createObjectURL(event.target.files[0]);
                };
            </script>
        </div>
        <div class="col-md-10 col-md-offset-2">
            <img id="output" width="250" />
        </div>
    </div>
  

    <div class="form-group">
        <div class="col-md-offset-2 col-md-1">
            <input type="submit" value="Add" class="btn btn-default btn-lg addProduct" />
        </div>

        <div class="col-md-offset-1 col-md-2">
            <input type="button" value="Cancel" onclick="location.href='@Request.UrlReferrer'" class="btn btn-default btn-lg " />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Home", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
